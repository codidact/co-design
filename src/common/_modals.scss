.modal {
  position: absolute;
  width: 100%;
  min-height: 100%;
  top: 0;
  left: 0;
  padding: $modal-outer-padding*$padding-unit;

  pointer-events: none;

  display: none;

  &.is-active { display: block; }

  &.is-with-backdrop {
    @include theme-switch-val($modal-backdrop-background,$modal-backdrop-background-dark) using ($val){
      background-color: $val;
    }
    position: fixed;

    height: 100%;

    pointer-events: all;

    .modal--container {
      box-shadow: $modal-shadow;
      max-height: 100%;
    }
  }

  .modal--container {
    margin: 0 auto;
    max-width: $modal-width;
    width: 100%;

    pointer-events: all;

    @include theme-switch-val($modal-background-color,$modal-background-color-dark) using ($val){
      background-color: $val; 
    }
    @include theme-switch-val($modal-shadow,$modal-shadow-dark) using ($val){
      box-shadow: $modal-shadow;
    }
    @include theme-switch-val($modal-border-color,$modal-border-color-dark) using ($val){
      border: $modal-border-width solid $val;
    }

    display: flex;
    flex-direction: column;


    .modal--header {
      padding: $modal-header-padding * $padding-unit;
      font-size: $modal-header-font-size;
      @include theme-switch-val($modal-inner-border-color,$modal-background-color-dark) using ($val){
        border-bottom: $modal-border-width solid $val;
      }
      font-weight: $modal-header-font-weight;

      .modal--header-link {
        float: right;
        font-size: $modal-header-link-font-size;
        padding: $padding-unit*$modal-header-link-padding-y $padding-unit*$modal-header-link-padding-x;
      }

      .modal--header-button {
        float: right;
        font-size: $modal-header-button-font-size;
        margin: 0;
      }
    }

    .modal--body {
      padding: $modal-body-padding * $padding-unit;
      max-height: $modal-body-overflow-height;
      overflow-y: auto;
    }

    .modal--footer {
      padding: $modal-footer-padding * $padding-unit;
      border-top: $modal-border-width solid $modal-inner-border-color;
    }
  }

  &.is-large .modal--container {
    max-width: $modal-large-width;

    .modal--body {
      max-height: $modal-large-body-overflow-height;
    }
  }

  &.is-small .modal--container {
    max-width: $modal-small-width;

    .modal--body {
      max-height: $modal-small-body-overflow-height;
    }
  }

  &.is-danger {
    .modal--header,
    .modal--container,
    .modal--footer {
      @include theme-switch-val($modal-danger-border-color,$modal-danger-border-color-dark) using ($val){
        border-color: $val;
      }
    }

    .modal--header {
      @include theme-switch-val($modal-danger-header-color,$modal-danger-header-color-dark) using ($val){
        color: $val;
      }
      @include theme-switch-val($modal-danger-background-color,$modal-danger-background-color-dark) using ($val){
        background-color: $val;
      }
    }
  }
}

@media all and (max-width: $grid-small-to-medium-breakpoint) {
  .modal {
    padding: 0;
    position: fixed;
    top: 0 !important;

    .modal--container {
      height: 100vh;
    }
    .modal--header,
    .modal--foter {
      flex-shrink: 0;
    }
    .modal--body {
      flex-grow: 1;
      overflow: auto;
    }
  }
}
